package task;

import java.util.*;
import java.time.LocalDate;
import java.io.*;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        TaskManager manager = new TaskManager();
        JobService jobService = new JobService();
        while (true) {
            System.out.println("\n======= MENU =======");
            System.out.println("1. Th√™m c√¥ng vi·ªác");
            System.out.println("2. X√≥a c√¥ng vi·ªác");
            System.out.println("3. C·∫≠p nh·∫≠t c√¥ng vi·ªác");
            System.out.println("4. Xem danh s√°ch c√¥ng vi·ªác");
            System.out.println("5. T√¨m ki·∫øm c√¥ng vi·ªác (title)");
            System.out.println("6. L·ªçc c√¥ng vi·ªác theo v·ªã tr√≠ & l∆∞∆°ng");
            System.out.println("7. ƒê·ªçc file + commit");
            System.out.println("0. Tho√°t");
            System.out.print("Ch·ªçn: ");

            int choice;
            try {
                choice = Integer.parseInt(scanner.nextLine());
            } catch (NumberFormatException e) {
                System.out.println("‚ö†Ô∏è Vui l√≤ng nh·∫≠p s·ªë h·ª£p l·ªá!");
                continue;
            }

            switch (choice) {
                case 1 -> {
                    System.out.print("Nh·∫≠p ID: ");
                    int id;
                    try {
                        id = Integer.parseInt(scanner.nextLine());
                    } catch (NumberFormatException e) {
                        System.out.println("‚ö†Ô∏è Vui l√≤ng nh·∫≠p ID l√† s·ªë h·ª£p l·ªá!");
                        continue;
                    }
                    System.out.print("T√™n c√¥ng vi·ªác: ");
                    String name = scanner.nextLine();
                    System.out.print("Tr·∫°ng th√°i: ");
                    String status = scanner.nextLine();
                    Task task = new Task(id, name, status, LocalDate.now());
                    manager.addTask(task);
                }
                case 2 -> {
                    System.out.print("Nh·∫≠p ID c·∫ßn x√≥a: ");
                    int id;
                    try {
                        id = Integer.parseInt(scanner.nextLine());
                    } catch (NumberFormatException e) {
                        System.out.println("‚ö†Ô∏è Vui l√≤ng nh·∫≠p ID l√† s·ªë h·ª£p l·ªá!");
                        continue;
                    }
                    if (!manager.removeTask(id)) {
                        System.out.println("‚ùå Kh√¥ng t√¨m th·∫•y c√¥ng vi·ªác ID: " + id);
                    } else {
                        System.out.println("‚úÖ ƒê√£ x√≥a c√¥ng vi·ªác.");
                    }
                }
                case 3 -> {
                    System.out.print("ID c·∫ßn c·∫≠p nh·∫≠t: ");
                    int id;
                    try {
                        id = Integer.parseInt(scanner.nextLine());
                    } catch (NumberFormatException e) {
                        System.out.println("‚ö†Ô∏è Vui l√≤ng nh·∫≠p ID l√† s·ªë h·ª£p l·ªá!");
                        continue;
                    }
                    System.out.print("T√™n m·ªõi: ");
                    String name = scanner.nextLine();
                    System.out.print("Tr·∫°ng th√°i m·ªõi: ");
                    String status = scanner.nextLine();
                    Task task = new Task(id, name, status, LocalDate.now());
                    if (manager.updateTask(task)) {
                        System.out.println("‚úÖ ƒê√£ c·∫≠p nh·∫≠t.");
                    } else {
                        System.out.println("‚ùå Kh√¥ng t√¨m th·∫•y c√¥ng vi·ªác.");
                    }
                }
                case 4 -> {
                    System.out.println("--- DANH S√ÅCH C√îNG VI·ªÜC ---");
                    for (Task task : manager.getAllTasks()) System.out.println(task);
                }
                case 5 -> {
                    System.out.print("Nh·∫≠p t·ª´ kh√≥a: ");
                    String keyword = scanner.nextLine();
                    List<Job> jobs = jobService.searchByTitle(keyword);
                    jobs.forEach(System.out::println);
                }
                case 6 -> {
                    System.out.print("Nh·∫≠p v·ªã tr√≠: ");
                    String location = scanner.nextLine();
                    System.out.print("Nh·∫≠p l∆∞∆°ng t·ªëi thi·ªÉu: ");
                    double minSalary;
                    try {
                        minSalary = Double.parseDouble(scanner.nextLine());
                    } catch (NumberFormatException e) {
                        System.out.println("‚ö†Ô∏è Vui l√≤ng nh·∫≠p l∆∞∆°ng l√† s·ªë h·ª£p l·ªá!");
                        continue;
                    }
                    List<Job> jobs = jobService.filterByLocationAndSalary(location, minSalary);
                    jobs.forEach(System.out::println);
                }
                case 7 -> {
                    readFileAndCommit(scanner); // Th√™m {} ƒë·ªÉ th·ªëng nh·∫•t c√∫ ph√°p
                }
                case 0 -> {
                    System.out.println("üëã Tho√°t ch∆∞∆°ng tr√¨nh.");
                    scanner.close();
                    return;
                }
                default -> System.out.println("‚ö†Ô∏è L·ª±a ch·ªçn kh√¥ng h·ª£p l·ªá!");
            }
        }
    }

    public static void readFileAndCommit(Scanner scanner) {
        System.out.print("Nh·∫≠p ƒë∆∞·ªùng d·∫´n t·ªõi file c·∫ßn ƒë·ªçc: ");
        String path = scanner.nextLine();

        try (BufferedReader reader = new BufferedReader(new FileReader(path))) {
            String line;
            System.out.println("\n--- N·ªôi dung file ---");
            while ((line = reader.readLine()) != null) {
                System.out.println(line);
            }
        } catch (IOException e) {
            System.out.println("Kh√¥ng th·ªÉ ƒë·ªçc file: " + e.getMessage());
        }

        System.out.print("\nNh·∫≠p commit message: ");
        String message = scanner.nextLine();

        System.out.println("\n‚úÖ COMMIT TH√ÄNH C√îNG");
        System.out.println("File: " + path);
        System.out.println("Message: " + message);
        System.out.println("Th·ªùi gian: " + java.time.LocalDateTime.now());
    }
}